{
  "author": {
    "name": "Jake Luer",
    "email": "jake@alogicalparadox.com"
  },
  "name": "seed",
  "description": "Storage-agnostic, event emitting datasets: schemas, models, hashes, and graphs.",
  "keyword": [
    "database",
    "db",
    "storage",
    "schema",
    "model",
    "collection"
  ],
  "version": "0.4.4",
  "repository": {
    "type": "git",
    "url": "git://github.com/qualiancy/seed.git"
  },
  "main": "index",
  "scripts": {
    "test": "make test"
  },
  "engines": {
    "node": ">= v0.6.0"
  },
  "dependencies": {
    "breeze": "0.4.x",
    "dragonfly": "0.2.x",
    "drip": "0.3.x",
    "filtr": "0.3.x",
    "oath": "0.2.x",
    "sol": "0.3.x",
    "super": "0.2.x"
  },
  "devDependencies": {
    "mocha": "*",
    "chai": "*",
    "chai-spies": "*",
    "matcha": "0.2.x"
  },
  "readme": "# Seed [![Build Status](https://secure.travis-ci.org/qualiancy/seed.png)](http://travis-ci.org/qualiancy/seed)\n\n> A storage-agnostic graphing database framework.\n\nSeed is a suite of components (Graph, Model, Schema, Hash) that provide a common API for working with JSON-style \ndocuments, regardless of the storage engine. Additionally, Seed can layer a graph structure to facilitate the \ntraversal of data relationships between documents of the same or different model types.\n\n- **Hash**: A thorough API for non-persistent key:value sets. These sets can be simple string key to number value, or \nstring key to object/document value. Hashs are used extensively througout the internals of the other components.\n- **Schema**: A schema is a definition of data structure expecatations and are currently used for validation. Those\nwho have used Mongoose will find the API familiar.\n- **Model**: A model defines all aspects and behavior related to a single data object in a set. More specifically, \nwhen used in conjunction with storage, a model represents one document in a collection or one row in a table. \n- **Graph**: A graph is a collection of instantiated models. A graph allows for logical groupings of several \ntypes of models, querying of storage, and traversal of model relationships. \n\n_Note: Documentation website in progress. Hold tight._\n\n### Projects Using Seed\n\n- [Kinetik](http://kinetik.qualiancy.com) is tag centric job queue for distributed applications.\n\nOther possible implementations:\n\n- Realtime notifications of status updates on social networks.\n- KPI monitoriing and alerts based on realtime sales data for shopping sites.\n- Evented ETL network\n\n## Installation\n\nPackage is available through [npm](http://npmjs.org).\n\n    $ npm install seed\n\n## Storage Engines\n\nSeed comes with a Memory based storage engine. Need an alternative?\n\n- [seed-redis](http://github.com/qualiancy/seed-redis) - Store your datasets in a \n[Redis](http://redis.io) database.\n- [seed-mongodb](https://github.com/qualiancy/seed-mongodb) - Store your datasets \nin a [MongoDB](http://www.mongodb.org/) database.\n- [seed-riak](https://github.com/qualiancy/seed-riak) - Store your datasets in\na [Riak](http://wiki.basho.com/Riak.html) database. (Seed 0.3.x only)\n\nCouchDB coming very soon.\n\n## Roadmap\n\nThe current release (0.4.x) is production ready for small to medium size projects. The next release will\nfocus on expanding on schema validation options and the graph traversal language. Also, be on the \nlookout for a kick-ass documentation website.\n\n## Tests\n\nTests are writting in [Mocha](http://github.com/visionmedia/mocha) using the [Chai](http://chaijs.com)\n`should` BDD assertion library. Make sure you have that installed, clone this repo, install dependacies \nusing `npm install`.\n\n    $ make test\n\n## Contributors\n\nInterested in contributing? Fork to get started. Contact [@logicalparadox](http://github.com/logicalparadox) \nif you are interested in being regular contributor.\n\n* Jake Luer ([@logicalparadox](http://github.com/logicalparadox))\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2011-2012 Jake Luer <jake@alogicalparadox.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n",
  "_id": "seed@0.4.4",
  "dist": {
    "shasum": "750c371289d94527c6eb6541d85a8d81bd93d2f3",
    "tarball": "http://registry.npmjs.org/seed/-/seed-0.4.4.tgz"
  },
  "maintainers": [
    {
      "name": "jakeluer",
      "email": "jake.luer@incatern.com"
    }
  ],
  "directories": {},
  "_shasum": "750c371289d94527c6eb6541d85a8d81bd93d2f3",
  "_from": "seed@",
  "_resolved": "https://registry.npmjs.org/seed/-/seed-0.4.4.tgz"
}
